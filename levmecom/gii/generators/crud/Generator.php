<?php
/* 
 * Copyright (c) 2018-2019 http://www.levme.com All rights reserved.
 * 
 * 创建时间：2019-08-31 20:27
 *
 * 项目：levme  -  $  - Generator.php
 *
 * 作者：liwei  Levme.com <675049572@qq.com>
 */
namespace app\gii\generators\crud;

use Yii;

class Generator extends \yii\gii\generators\crud\Generator
{
    public $template = 'levmecomCrud';
    public $modelPageTitle = '';

    public function getName()
    {
        $name = parent::getName(); // TODO: Change the autogenerated stub
        return $name.'（增删改查）';
    }

    public function getDescription()
    {
        //return parent::getDescription(); // TODO: Change the autogenerated stub
        return '此生成器生成控制器和视图，以实现指定数据模型的CRUD（创建、读取、更新、删除）操作。';
    }

    public function rules()
    {
        return array_merge(parent::rules(), [
            [['modelPageTitle'], 'string'],
        ]); // TODO: Change the autogenerated stub
    }

    public function attributeLabels()
    {
        $labels = parent::attributeLabels(); // TODO: Change the autogenerated stub

        $labels['modelPageTitle'] = 'Title（页面名称）';
        $labels['modelClass'].= '（表模型类）';
        $labels['searchModelClass'].= '（搜索模型类）';
        $labels['controllerClass'].= '（控制器类名）';
        $labels['viewPath'].= '（视图模板目录）';

        return $labels;
    }

    public function hints()
    {
        $hints = parent::hints(); // TODO: Change the autogenerated stub

        $hints['modelPageTitle'] = '例：用户管理';
        $hints['modelClass'] = '请填写一个与表关联的ActiveRecord类（已经创建好的表模型类），<br>例：<code>app\models\post<code>';
        $hints['searchModelClass'] = '搜索模型类的名称（命名空间 + 类名），留空不创建！<br>例：<code>app\models\postsearch<code>。';
        $hints['controllerClass'] = '要生成的控制器类的名称（命名空间 + 类名），
<br>命名空间：命名空间与ControllerNamespace属性指定的相同；<br>类名：类名第一个字母必须大写；
<br>例：<code>app\controllers\PostController<code>';
        $hints['viewPath'] = '例：<code>/var/www/basic/controllers/views/post</code>
<br>或：<code>@app/views/post</code>
<br>如果不设置，则默认至控制器views/目录';

        return $hints;
    }

    public function formView()
    {
        return parent::formView(); // TODO: Change the autogenerated stub
        //return \Yii::getAlias('@yii/gii/generators/crud').'/form.php';
    }

    public function getViewPath()
    {

        if (empty($this->viewPath)) {
            if (($pos = strrpos($this->controllerClass, '\\controllers')) !==false) {
                return Yii::getAlias('@' . str_replace('\\', '/', substr($this->controllerClass, 0, $pos)) . '/views/' . $this->getControllerID());
            }
            return Yii::getAlias('@app/views/' . $this->getControllerID());
        }

        return parent::getViewPath(); // TODO: Change the autogenerated stub
    }

    public function generateActiveField($attribute)
    {
        if (in_array($attribute, ['status'])) {
            return "\$form->field(\$model, '$attribute')->radioList(['开启', '关闭'], ['value'=>intval(\$model->status)])";
        }else {
            return parent::generateActiveField($attribute); // TODO: Change the autogenerated stub
        }
    }

    public function generateColumnFormat($column)
    {
        $format = parent::generateColumnFormat($column); // TODO: Change the autogenerated stub

        if ($this->template == 'default') return $format;

        return $format == 'text' ? $column->phpType : $format;
    }

    public function generate()
    {

        $files = parent::generate(); // TODO: Change the autogenerated stub
        return $files;
    }

}






