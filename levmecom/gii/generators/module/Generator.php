<?php
/* 
 * Copyright (c) 2018-2019 http://www.levme.com All rights reserved.
 * 
 * 创建时间：2019-08-31 20:27
 *
 * 项目：levme  -  $  - Generator.php
 *
 * 作者：liwei  Levme.com <675049572@qq.com>
 */
namespace app\gii\generators\module;

use yii\gii\CodeFile;

class Generator extends \yii\gii\generators\module\Generator
{
    public $template = 'levmecomModule';

    public $moduleName, $moduleDescs, $moduleCopyright, $moduleVersion;

    public function getName()
    {
        return parent::getName().'（模块生成器）';
    }
    public function getDescription()
    {
        return '生成在后台可安装的Levmecom基础模块';
    }
    public function attributeLabels()
    {
        $labels = parent::attributeLabels(); // TODO: Change the autogenerated stub
        $labels['moduleID'].= '（模块ID）';
        $labels['moduleClass'].= '（模块类名）';
        $labels['moduleName'] = '模块名称';
        $labels['moduleDescs'] = '模块描述';
        $labels['moduleCopyright'] = '模块版权';
        $labels['moduleVersion'] = '模块版本号';
        return $labels;
    }
    public function rules()
    {
        return array_merge(parent::rules(), [
            [['moduleName', 'moduleDescs', 'moduleCopyright', 'moduleVersion'], 'string'],
            [['moduleName', 'moduleDescs', 'moduleCopyright', 'moduleVersion'], 'required'],
        ]); // TODO: Change the autogenerated stub
    }
    public function hints()
    {
        $hints = parent::hints(); // TODO: Change the autogenerated stub

        $hints['moduleID'] = '这里填写模块ID，例：<code>admin</code>';
        $hints['moduleClass'] = '这里填写模块的完全类名（命名空间 + 类名）<br>例：<code>app\modules\admin\Module</code><br>=> <code>命名空间(app\modules\admin) + 类名(Module)</code>';

        return $hints;
    }

    public function formView()
    {
        return parent::formView(); // TODO: Change the autogenerated stub
        //return \Yii::getAlias('@yii/gii/generators/module').'/form.php';
    }

    public function generate()
    {
        $files = parent::generate(); // TODO: Change the autogenerated stub

        $bodyParams = \Yii::$app->request->post();
        if (isset($bodyParams['Generator']['template']) && $bodyParams['Generator']['template'] == 'default') {
            return $files;
        }

        $modulePath = $this->getModulePath();

        $files[] = new CodeFile(
            $modulePath . '/migrations/installModule.php',
            $this->render("migrations/installModule.php")
        );

        $files[] = new CodeFile(
            $modulePath . '/migrations/uninstallModule.php',
            $this->render("migrations/uninstallModule.php")
        );

        $files[] = new CodeFile(
            $modulePath . '/migrations/updateModule.php',
            $this->render("migrations/updateModule.php")
        );

//        $files[] = new CodeFile(
//            $modulePath . '/controllers/AdminController.php',
//            $this->render("controllers/AdminController.php")
//        );

        $files[] = new CodeFile(
            $modulePath . '/controllers/AdminInstallController.php',
            $this->render("controllers/AdminInstallController.php")
        );

        $files[] = new CodeFile(
            $modulePath . '/redis/models/'.$this->moduleID.'RedisModel.php',
            $this->render('redis/models/model.php')
        );

        return $files;
    }
}